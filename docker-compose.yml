version: "3.3"

services:
  database:
    image: mysql:5.7
    restart: always
    container_name: mysql_db
    environment:
        MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
        MYSQL_DATABASE: '${DB_DATABASE}'
    ports:
      - "3306:3306"
    volumes:
        - 'api-mysql:/var/lib/mysql'
    networks:
        - application
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-p${DB_PASSWORD}"]
      retries: 2
      timeout: 5s

  code.dev:
    build:
        context: ./backend
        dockerfile: dev.Dockerfile
    env_file:
      - .env
    environment:
        - DB_HOST=database
        - DB_DATABASE=${DB_DATABASE}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
        - ENABLE_LOGGER=${ENABLE_LOGGER}
    volumes:
        - ./backend/build:/apps
    ports:
        - "5000"
    restart: always
    depends_on:
      - database
      # Connect the API to a common api.network bridge
    networks:
      - application
    # Start 2 instances of the API service for load balancing
    deploy:
      replicas: 2

  nginx:
    image: nginx:latest
    container_name: nginx_app
    restart: always
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - code.dev
    ports:
        - "8080:8080"
        - "5050:5050"
    networks:
        - application

networks:
    application:
        driver: bridge

volumes:
    api-mysql:
        driver: local